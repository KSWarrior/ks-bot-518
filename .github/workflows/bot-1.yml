name: Minecraft Java Bot No 1 by ks_warrior

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  actions: write
  contents: read

concurrency:
  group: ks-mc-bot
  cancel-in-progress: true

jobs:
  run-mc-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'

    - name: Create Bot File with Indented Lines
      shell: bash
      run: |
        cat > ks-bot.js << 'EOF'
         const mineflayer = require('mineflayer');
         const { pathfinder, Movements, goals } = require('mineflayer-pathfinder');

         // === Config ===
         const HOST = 'localhost';
         const PORT = 25565;
         const USERNAME = 'your@mail.com';
         const PASSWORD = 'yourpassword';

         const RADIUS = 10;
         const JUMP_INTERVAL = 60 * 1000;
         const WALK_INTERVAL = 15 * 1000;
         const RECONNECT_DELAY = 5000;

         // === Chat Auto-Replies ===
         const CHAT_RESPONSES = {
           hi: "Hello {user}! üëã",
           hello: "Hey {user}, how‚Äôs it going? üòé",
           bye: "Goodbye {user}, see you later! üëã",
           help: "I am just a bot ü§ñ but I can walk, jump and chat!"
         };

         let bot;

         function getRandomPosition(origin, radius) {
           const angle = Math.random() * 2 * Math.PI;
           const distance = Math.random() * radius;
           return {
             x: Math.floor(origin.x + Math.cos(angle) * distance),
             y: Math.floor(origin.y),
             z: Math.floor(origin.z + Math.sin(angle) * distance)
           };
         }

         function periodicJump() {
           if (!bot || !bot.entity) return;
           bot.setControlState('jump', true);
           setTimeout(() => bot.setControlState('jump', false), 500);
         }

         function walkRandom() {
           if (!bot || !bot.entity) return;
           const origin = bot.entity.position;
           const pos = getRandomPosition(origin, RADIUS);

           const movement = new Movements(bot, bot.registry);
           bot.pathfinder.setMovements(movement);
           bot.pathfinder.setGoal(new goals.GoalBlock(pos.x, pos.y, pos.z));
         }

         function createBot() {
           bot = mineflayer.createBot({
             host: HOST,
             port: PORT,
             username: USERNAME,
             password: PASSWORD
           });

           bot.loadPlugin(pathfinder);

           bot.once('spawn', () => {
             console.log('‚úÖ Bot spawned in the world');
             bot.chat('Hello! I am online ü§ñ');

             clearIntervals();
             bot.jumpInterval = setInterval(periodicJump, JUMP_INTERVAL);
             bot.walkInterval = setInterval(walkRandom, WALK_INTERVAL);
           });

           bot.on('chat', (username, message) => {
             if (username === bot.username) return;
             console.log(`[CHAT] <${username}> ${message}`);
             const lowerMsg = message.toLowerCase();
             if (CHAT_RESPONSES[lowerMsg]) {
               const reply = CHAT_RESPONSES[lowerMsg].replace("{user}", username);
               bot.chat(reply);
             }
           });

           bot.on('end', () => {
             console.log('‚ö†Ô∏è Bot disconnected, reconnecting in 5 seconds...');
             clearIntervals();
             setTimeout(createBot, RECONNECT_DELAY);
           });

           bot.on('kicked', (reason) => {
             console.log('‚ùå Bot kicked:', reason);
           });

           bot.on('error', (err) => {
             console.log('‚ùå Bot error:', err.message);
           });
         }

         function clearIntervals() {
           if (bot?.jumpInterval) clearInterval(bot.jumpInterval);
           if (bot?.walkInterval) clearInterval(bot.walkInterval);
         }

         createBot();
        EOF

    - name: Install dependencies
      shell: bash
      run: |
        npm init -y
        npm install mineflayer mineflayer-pathfinder

    - name: Start Minecraft Bot (300m runtime)
      shell: bash
      run: |
        timeout 85 node ks-bot.js || true

    - name: Restart Workflow (every 5h)
      uses: benc-uk/workflow-dispatch@v1
      if: ${{ always() }}
      with:
        workflow: Minecraft Java Bot No 1 by ks_warrior
        ref: main
        token: ${{ secrets.GITHUB_TOKEN }}
