name: Minecraft Java Bot No 1 by ks_warrior

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  actions: write
  contents: read

concurrency:
  group: ks-mc-bot
  cancel-in-progress: true

jobs:
  run-mc-bot:
    runs-on: ubuntu-latest
    timeout-minutes: 85

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Create Bot File with Leading Spaces
        shell: bash
        run: |
          cat > ks-bot.js <<'EOF'
           const mineflayer = require('mineflayer');
           const SERVER_HOST = 'ks_warrior_bot.aternos.me';
           const SERVER_PORT = 34150;
           const BOT_USERNAME = process.argv[2] || 'Player5';
           const RECONNECT_DELAY = 15000; // 10 seconds to reduce rapid reconnects
           const AFK_INTERVAL = 20000; // 20 seconds
           let bot;
           let shouldStop = false;
           let afkInterval;
           function clearBotIntervals() {
             if (afkInterval) clearInterval(afkInterval);
             afkInterval = null;
           }
           function startBot() {
             console.log(`🚀 Starting bot "${BOT_USERNAME}" -> ${SERVER_HOST}:${SERVER_PORT}`);
             bot = mineflayer.createBot({
               host: SERVER_HOST,
               port: SERVER_PORT,
               username: BOT_USERNAME
             });
             bot.on('login', () => console.log(`✅ Logged in as ${BOT_USERNAME}`));
             bot.on('spawn', () => {
               console.log('🏞 Spawned in world');
               // Start Anti-AFK
               clearBotIntervals();
               afkInterval = setInterval(() => {
                 if (!bot || !bot.entity) return;
                 // Random look
                 const yaw = Math.random() * Math.PI * 2;
                 bot.look(yaw, 0, false);
                 // Random movement
                 const actions = ['forward', 'back', 'left', 'right'];
                 const action = actions[Math.floor(Math.random() * actions.length)];
                 bot.setControlState(action, true);
                 // Jump occasionally
                 if (Math.random() > 0.7) {
                   bot.setControlState('jump', true);
                   setTimeout(() => bot.setControlState('jump', false), 500);
                 }
                 // Stop moving after short delay
                 setTimeout(() => bot.setControlState(action, false), 1000);
               }, AFK_INTERVAL);
             });
             bot.on('end', () => {
               console.log('❌ Bot disconnected');
               clearBotIntervals();
               if (!shouldStop) {
                 console.log(`🔄 Reconnecting in ${RECONNECT_DELAY / 1000}s...`);
                 setTimeout(startBot, RECONNECT_DELAY);
               }
             });
             bot.on('kicked', (reason) => {
               console.log('⚠️ Kicked:', reason);
             });
             bot.on('error', (err) => {
               console.log('💥 Error:', err.message);
             });
           }
           // Console commands
           process.stdin.on('data', (data) => {
             const cmd = data.toString().trim();
             if (cmd === 'quit' || cmd === 'stop') {
               console.log('🛑 Stopping bot...');
               shouldStop = true;
               bot.end();
               process.exit(0);
             } else if (cmd) {
               bot.chat(cmd);
             }
           });
           startBot();
          EOF
      - name: Install dependencies
        shell: bash
        run: |
          npm init -y
          npm install mineflayer mineflayer-pathfinder
      - name: Start Minecraft Bot (300m runtime)
        shell: bash
        run: |
          nohup node ks-bot.js > bot.log 2>&1 &

      - name: Start Minecraft Bot (300m runtime)
        shell: bash
        run: |
          sleep 5000
          
      - name: Restart Workflow (every 5h)
        uses: benc-uk/workflow-dispatch@v1
        if: ${{ always() }}
        with:
          workflow: Minecraft Java Bot No 1 by ks_warrior
          ref: main
          token: ${{ secrets.GITHUB_TOKEN }}
